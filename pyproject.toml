[tool.poetry]
name = "nhs_aws_helpers"
version = "0.0.0"
description = ""
authors = ["spinecore"]
license = "MIT"
packages = [
    { include = "nhs_aws_helpers" },
    { include = "tests", format = "sdist" },
]
readme = "README.md"

[tool.poetry.dependencies]
# core dependencies
python = ">=3.8.1,<3.11.0"


boto3 = "^1.26.159"
boto3-stubs = {extras = ["s3", "ssm", "secretsmanager", "dynamodb", "stepfunctions", "sqs", "lambda", "logs", "sns", "events", "kms", "firehose", "athena"], version = "^1.26.159"}
botocore-stubs = "^1.29.159"


[tool.setuptools.package-data]
"nhs_aws_helpers" = ["py.typed"]

[tool.poetry.group.dev.dependencies]
# ci / testing dependencies
petname = "^2.6"
black = "^22.12.0"
isort = "^5.12.0"
mypy = "^1.3.0"
coverage = "^7.2.7"
pytest = "^7.3.1"
pytest-asyncio = "^0.21.0"
flake8 = "^6.0.0"
flake8-pyproject = "^1.2.3"
flake8-black = "^0.3.6"
tox = "^4.6.3"
pytest-httpserver = "^1.0.8"


[tool.poetry.group.local.dependencies]
ipython = "^8.12.2"

[tool.black]
line-length = 120
target-version = ['py38', 'py39', 'py310']
include = '\.pyi?$'
#extend-exclude = '''
#/(
#  # The following are specific to Black, you probably don't want those.
#  | blib2to3
#  | tests/data
#  | profiling
#)/
#'''

[tool.flake8]
ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "build",
    "dist"
]
#extend-ignore = ["E203"]
#per-file-ignores = [
#    '__init__.py:F401',
#]
max-line-length = 120
count = true



[tool.coverage.run]
branch = true
omit = [
    ".venv/*",
]
source = [
    "."
]


[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    "pragma: no cover",
    "from .*",
    "import .*"
]
omit = [
    "tests/*",
]
sort = "-cover"
ignore_errors = true
precision = 2
fail_under = 70
show_missing = true

[tool.coverage.xml]
output = "reports/coverage.xml"



[tool.pytest.ini_options]
asyncio_mode = "auto"
python_classes = "NoTestClasses"
python_files = "*_tests.py test_*.py"
norecursedirs = ".git .venv .eggs build dist"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
show_error_codes = true
check_untyped_defs = true

[tool.isort]
profile = "black"

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py38,py39,py310

[gh-actions]
python =
    3.8: py38
    3.9: py39
    3.10: py310

[testenv]
deps =
    pytest
    pytest-asyncio
allowlist_externals =
    which
    pytest
commands = 
    python --version
    which python
    which pytest
    pytest
"""


[tool.poetry-dynamic-versioning]
enable = true
metadata = false
vcs = "git"
style = "pep440"
format-jinja = """
    {%- if distance == 0 -%}
        {{ serialize_pep440(base, stage, revision) }}
    {%- else -%}
        {{ serialize_pep440(bump_version(base), stage, revision, dev=timestamp) }}
    {%- endif -%}
"""

[tool.poetry-dynamic-versioning.substitution]
folders = [
    { path = "./" }
]

[build-system]
requires = ["poetry>=1.2", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"
